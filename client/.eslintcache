[{"C:\\searchModelwithJwtPERN\\client\\src\\index.js":"1","C:\\searchModelwithJwtPERN\\client\\src\\App.js":"2","C:\\searchModelwithJwtPERN\\client\\src\\reportWebVitals.js":"3","C:\\searchModelwithJwtPERN\\client\\src\\components\\Dashboard.js":"4","C:\\searchModelwithJwtPERN\\client\\src\\components\\Login.js":"5","C:\\searchModelwithJwtPERN\\client\\src\\components\\Register.js":"6","C:\\searchModelwithJwtPERN\\client\\src\\components\\Home.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":2400,"mtime":1608311923634,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3977,"mtime":1608310143592,"results":"12","hashOfConfig":"9"},{"size":1910,"mtime":1608244768323,"results":"13","hashOfConfig":"9"},{"size":2176,"mtime":1608244768327,"results":"14","hashOfConfig":"9"},{"size":1467,"mtime":1608321075955,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1skfob1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\searchModelwithJwtPERN\\client\\src\\index.js",[],["33","34"],"C:\\searchModelwithJwtPERN\\client\\src\\App.js",["35","36"],"import { Fragment, useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\n\ntoast.configure();\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n  const isAuth = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n      const parseRes = await response.json();\n      console.log(parseRes);\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    isAuth();\n  }, []);\n\n  return (\n    <Fragment>\n       \n      <Router>\n    \n        <div className=\"container\">\n          <Switch>\n          <Route\n              exact\n              path=\"/\"\n              render={(props) =><Home {...props}/>\n                \n              }\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                !isAuthenticated ? (\n                  <Login {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) =>\n                !isAuthenticated ? (\n                  <Register {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <Dashboard {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","C:\\searchModelwithJwtPERN\\client\\src\\reportWebVitals.js",[],"C:\\searchModelwithJwtPERN\\client\\src\\components\\Dashboard.js",["37"],"import React, { Fragment,useState,useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nconst Dashboard = ({ setAuth }) => {\r\nconst [name,setName]=useState(\"\");\r\nconst [modelName,setModelName]=useState(\"\");\r\nconst [superModels, setSuperModels] = useState([]);\r\n\r\nconst getName=async ()=>{\r\ntry {\r\n  const response=await fetch('http://localhost:5000/dashboard/',{\r\n    method:\"GET\",\r\n    headers:{token:localStorage.token}\r\n  });\r\n  const parsRes=await response.json();\r\n  console.log(parsRes);\r\n  setName(parsRes.user_name)\r\n} catch (err) {\r\n  console.error(err.message)\r\n}\r\n} \r\n\r\nuseEffect(()=>{\r\n  getName();\r\n},[]);\r\n\r\nconst logout=(e)=>{\r\n  e.preventDefault();\r\n  localStorage.removeItem('token');\r\n  setAuth(false);\r\n  toast.success('Logged out successfully!')\r\n};\r\n\r\nconst onSearchChange=(e)=>{\r\n  setModelName(e.target.value)\r\n  console.log(e.target.value)\r\n};\r\n\r\nconst onSubmitForm=async (e)=>{\r\ne.preventDefault();\r\ntry {\r\n  const response = await fetch(`http://localhost:5000/models/?modelName=${modelName}`);\r\n  const resResponse = await response.json();\r\n  console.log(\"models:\",resResponse);\r\n  setSuperModels(resResponse);\r\n} catch (err) {\r\n  console.error(err.message);\r\n}\r\n};\r\n\r\nconst superModelMap=superModels.map((superModel)=>{\r\n  return(\r\n    <tr key={superModel.user_id}>\r\n   \r\n    <td>{superModel.first_name}</td>\r\n    <td>{superModel.last_name}</td>\r\n    \r\n  </tr>\r\n  )\r\n});\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <a class=\"navbar-brand\" href=\"\">Super Model Search</a>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        {/* <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li> */}\r\n        {/* <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li> */}\r\n        {/* <li class=\"nav-item\">\r\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n      <form class=\"d-flex\">\r\n      <p class=\"me-2\">Welcome {name.toUpperCase()}!</p>\r\n        {/* <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /> */}\r\n        {/* <button class=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n        <button className='btn btn-danger' onClick={(e)=>logout(e)}>Logout</button>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n      {/* <h1>Super Model Search</h1>\r\n      <p>Welcome {name}!</p> */}\r\n      <div className=\"container text-center\">\r\n        <h1 className=\"my-5\">Party List</h1>\r\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\r\n          <input\r\n          required=\"required\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter user...\"\r\n            value={modelName}\r\n            onChange={onSearchChange}\r\n          />\r\n          <button className=\"btn btn-success\">Search</button>\r\n        </form>\r\n        \r\n        <table className=\"table table-dark table-hover my-5\">\r\n          <thead>\r\n            <tr>\r\n              \r\n              <th scope=\"col\">First</th>\r\n              <th scope=\"col\">Last</th>\r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {superModelMap}          \r\n           \r\n          </tbody>\r\n        </table>\r\n        {superModels.length===0 && <p>No results found</p>}\r\n      </div>\r\n      <hr />\r\n     {/* <button className='btn btn-danger' onClick={(e)=>logout(e)}>Logout</button> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\searchModelwithJwtPERN\\client\\src\\components\\Login.js",[],"C:\\searchModelwithJwtPERN\\client\\src\\components\\Register.js",[],"C:\\searchModelwithJwtPERN\\client\\src\\components\\Home.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":3,"nodeType":"44","messageId":"45","endLine":7,"endColumn":7},{"ruleId":"42","severity":1,"message":"46","line":10,"column":10,"nodeType":"44","messageId":"45","endLine":10,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":68,"column":5,"nodeType":"49","endLine":68,"endColumn":37},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]